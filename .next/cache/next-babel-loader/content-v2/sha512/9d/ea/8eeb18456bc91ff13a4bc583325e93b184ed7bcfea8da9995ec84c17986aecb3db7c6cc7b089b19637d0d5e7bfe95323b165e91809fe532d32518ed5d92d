{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  {\n    /*배포용일때는 devtools 연결 X, 용량 차지 때문에\r\n    하지만 개발자용일때는 devtools를 연결해서 history가 쌓이게 한다\r\n    배포용일때는 history를 쌓아두지 않고 계속 버림 */\n  }\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/전채이/winter/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAK;AACxB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADI,GAEXH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFzB;AAGA;AAAC;AACL;AACA;AAAqC;AACjC,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CAVD;;AAWA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, compose, createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers'\r\n\r\nconst configureStore = () =>{\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV==='production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n    {/*배포용일때는 devtools 연결 X, 용량 차지 때문에\r\n    하지만 개발자용일때는 devtools를 연결해서 history가 쌓이게 한다\r\n    배포용일때는 history를 쌓아두지 않고 계속 버림 */}\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug : process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}